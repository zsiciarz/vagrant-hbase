---
- hosts: vagrant
  connection: ssh
  user: vagrant

  vars:
    - ssh_key: /home/vagrant/.ssh/id_rsa
    - hadoop_release: hadoop-1.2.1
    - hadoop_archive: '{{ hadoop_release }}.tar.gz'
    - hadoop_home_dir: '/home/vagrant/{{ hadoop_release }}'
    - hadoop_tmp_dir: '/data/hadoop'
    - hadoop_fs_default_name: 'hdfs://localhost:54310'
    - hbase_release: hbase-0.94.13
    - hbase_archive: '{{ hbase_release }}.tar.gz'
    - hbase_home_dir: '/home/vagrant/{{ hbase_release }}'
    - hbase_data_dir: /data/hbase
    - zookeeper_data_dir: /data/zk

  tasks:
    - name: ensure recent package list
      apt: update_cache=yes
      sudo: yes

    - name: install essential Python packages
      apt: pkg='{{ item }}' state=present
      with_items:
        - python-pip
        - python-virtualenv
        - python-software-properties
        - python-dev
      sudo: yes

    - name: install Python client libraries for Thrift and HBase
      pip: name='{{ item }}' state=present
      with_items:
        - thrift
        - happybase
      sudo: yes

    - name: add Java PPA
      apt_repository: repo=ppa:webupd8team/java state=present
      sudo: yes

    - name: automatically accept Java license
      shell: echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      sudo: yes

    - name: install Java 7
      apt: pkg='{{ item }}' state=present update_cache=yes
      with_items:
        - oracle-java7-installer
        - oracle-java7-set-default
        - jython
      sudo: yes

    - name: fix /etc/hosts
      lineinfile: dest=/etc/hosts regexp='^127\.0\.1\.1\s+(.*)$' line='127.0.0.1 \1' backrefs=yes state=present
      sudo: yes

    - name: create base data directory
      file: path=/data state=directory owner=vagrant group=vagrant mode=0755 recurse=yes
      sudo: yes

    - name: create SSH config
      template: src=templates/ssh-config.j2 dest=/home/vagrant/.ssh/config

    - name: create SSH key pair for Hadoop
      command: creates='{{ ssh_key }}.pub' ssh-keygen -t rsa -N "" -C "for Hadoop" -f '{{ ssh_key }}'

    - name: add generated key to authorized_keys
      shell: 'if grep -q Hadoop /home/vagrant/.ssh/authorized_keys; then echo "public key already added"; else cat {{ ssh_key }}.pub >> /home/vagrant/.ssh/authorized_keys; fi'

    ### Hadoop

    - name: download Hadoop relase {{ hadoop_release }}
      get_url: url='http://ftp.ps.pl/pub/apache/hadoop/core/stable1/{{ hadoop_archive }}' dest='/home/vagrant/{{ hadoop_archive }}'

    - name: extract Hadoop archive
      command: tar xzf '/home/vagrant/{{ hadoop_archive }}' creates='{{ hadoop_home_dir }}'

    - name: set JAVA_HOME environment variable for Hadoop
      lineinfile: dest='{{ hadoop_home_dir }}/conf/hadoop-env.sh' regexp='^#?\s*export JAVA_HOME=(.*)$' line='export JAVA_HOME=/usr/lib/jvm/java-7-oracle/jre' state=present

    - name: set additional JVM options for Hadoop
      lineinfile: dest='{{ hadoop_home_dir }}/conf/hadoop-env.sh' regexp='^#?\s*export HADOOP_OPTS=(.*)$' line='export HADOOP_OPTS=-Djava.net.preferIPv4Stack=true' state=present

    - name: write Hadoop core config file
      template: src=templates/hadoop-core-site.xml.j2 dest='{{ hadoop_home_dir }}/conf/core-site.xml'

    - name: write Hadoop HDFS config file
      template: src=templates/hadoop-hdfs-site.xml.j2 dest='{{ hadoop_home_dir }}/conf/hdfs-site.xml'

    - name: format the Hadoop filesystem
      command: creates='{{ hadoop_tmp_dir }}' '{{ hadoop_home_dir }}/bin/hadoop' namenode -format

    - name: start Hadoop DFS daemons
      command: '{{ hadoop_home_dir }}/bin/start-dfs.sh'

    ### HBase

    - name: download HBase release {{ hbase_release }}
      get_url: url='http://ftp.ps.pl/pub/apache/hbase/stable/{{ hbase_archive }}' dest='/home/vagrant/{{ hbase_archive }}'

    - name: create HBase-related directories
      file: path='{{ item }}' state=directory
      with_items:
        - '{{ hbase_data_dir }}'
        - '{{ zookeeper_data_dir }}'

    - name: extract HBase archive
      command: tar xzf '/home/vagrant/{{ hbase_archive }}' creates='{{ hbase_home_dir }}'

    - name: write HBase config file
      template: src=templates/hbase-site.xml.j2 dest='{{ hbase_home_dir }}/conf/hbase-site.xml'

    - name: set JAVA_HOME environment variable for HBase
      lineinfile: dest='{{ hbase_home_dir }}/conf/hbase-env.sh' regexp='^#?\s*export JAVA_HOME=(.*)$' line='export JAVA_HOME=/usr/lib/jvm/java-7-oracle/jre' state=present

    - name: start HBase
      command: '{{ hbase_home_dir }}/bin/start-hbase.sh'

    - name: start Thrift server
      shell: '{{ hbase_home_dir }}/bin/hbase-daemon.sh start thrift'
