---
- name: download HBase release {{ hbase_release }}
  get_url: url='http://archive.cloudera.com/cdh5/cdh/5/hbase-0.98.6-cdh5.3.3.tar.gz'
           dest='/home/vagrant/{{ hbase_archive }}'
           sha256sum='{{ hbase_sha256 }}'

- name: create HBase-related directories
  file: path='{{ item }}' state=directory
  with_items:
    - '{{ hbase_data_dir }}'
    - '{{ zookeeper_data_dir }}'

- name: extract HBase archive
  command: tar xzf '/home/vagrant/{{ hbase_archive }}'
           chdir=/home/vagrant/
           creates='{{ hbase_home_dir }}'

- name: symlink HBase home directory to just hbase/
  file: path=/home/vagrant/hbase src='{{ hbase_home_dir }}' state=link

- name: write HBase config file
  template: src=hbase-site.xml.j2
            dest='{{ hbase_home_dir }}/conf/hbase-site.xml'

- name: Make sure HBase regionservers file doesn't contain 'localhost'
  template: src=regionservers.j2
            dest='{{ hbase_home_dir }}/conf/regionservers'

- name: set JAVA_HOME environment variable for HBase
  lineinfile: dest='{{ hbase_home_dir }}/conf/hbase-env.sh'
              regexp='^#?\s*export JAVA_HOME='
              line='export JAVA_HOME=/usr/lib/jvm/java-7-oracle/jre'
              state=present

- name: explicitly tell HBase to manage Zookeeper
  lineinfile: dest='{{ hbase_home_dir }}/conf/hbase-env.sh'
              regexp='^#?\s*export HBASE_MANAGES_ZK='
              line='export HBASE_MANAGES_ZK=true'
              state=present

- name: start HBase
  command: ./bin/start-hbase.sh
           chdir={{ hbase_home_dir }}
  register: hbase_start
  changed_when: hbase_start.stdout.find('starting master') == -1

- name: start Thrift server
  command: ./bin/hbase-daemon.sh start thrift
           chdir={{ hbase_home_dir }}
  register: thrift_start
  changed_when: thrift_start.stdout.find('starting thrift') == -1
